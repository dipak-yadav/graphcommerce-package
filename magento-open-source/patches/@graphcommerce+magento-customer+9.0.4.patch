diff --git a/node_modules/@graphcommerce/magento-customer/components/SignInForm/SignInForm.tsx b/node_modules/@graphcommerce/magento-customer/components/SignInForm/SignInForm.tsx
index 9a27189..f0d760e 100644
--- a/node_modules/@graphcommerce/magento-customer/components/SignInForm/SignInForm.tsx
+++ b/node_modules/@graphcommerce/magento-customer/components/SignInForm/SignInForm.tsx
@@ -29,7 +29,10 @@ export function SignInForm(props: SignInFormProps) {
       }
       // eslint-disable-next-line @typescript-eslint/no-use-before-define
       clearErrors()
-      return variables
+      return {
+        email,
+        password: control._formValues.password,
+      }
     },
   })
 
diff --git a/node_modules/@graphcommerce/magento-customer/hooks/useSignInForm.interceptor.ts b/node_modules/@graphcommerce/magento-customer/hooks/useSignInForm.interceptor.ts
new file mode 100644
index 0000000..69d1f51
--- /dev/null
+++ b/node_modules/@graphcommerce/magento-customer/hooks/useSignInForm.interceptor.ts
@@ -0,0 +1,69 @@
+/* hash:717073135 */
+/* eslint-disable */
+/* This file is automatically generated for @graphcommerce/magento-customer/hooks/useSignInForm */
+
+/** @see {@link file://./useSignInForm.ts} for source of original */
+/** SOURCE_START */
+import { useApolloClient } from '@graphcommerce/graphql'
+import { useSignInForm as useSignInFormuseSignInFormMergeCart } from '@graphcommerce/magento-cart/plugins/useSignInFormMergeCart'
+import { setCssFlag } from '@graphcommerce/next-ui'
+import type { UseFormGraphQlOptions } from '@graphcommerce/react-hook-form'
+import { useFormGqlMutation } from '@graphcommerce/react-hook-form'
+import type { SignInMutation, SignInMutationVariables } from '../components/SignInForm/SignIn.gql'
+import { SignInDocument } from '../components/SignInForm/SignIn.gql'
+import { signOut } from '../components/SignOutForm/signOut'
+import { CustomerDocument } from './Customer.gql'
+
+type UseSignInFormProps = {
+  email?: string
+} & UseFormGraphQlOptions<SignInMutation, SignInMutationVariables>
+export function useSignInFormOriginal({ email, ...options }: UseSignInFormProps) {
+  const client = useApolloClient()
+  return useFormGqlMutation(
+    SignInDocument,
+    {
+      ...options,
+      defaultValues: {
+        email,
+        ...options?.defaultValues,
+      },
+      onBeforeSubmit: async (values) => {
+        const oldEmail = client.cache.readQuery({
+          query: CustomerDocument,
+        })?.customer?.email
+        if (oldEmail && oldEmail !== email) signOut(client)
+        const newValues = email
+          ? {
+              ...values,
+              email,
+            }
+          : values
+        return options?.onBeforeSubmit ? options.onBeforeSubmit(newValues) : newValues
+      },
+      onComplete: (...args) => {
+        setCssFlag('private-query', true)
+        return options.onComplete?.(...args)
+      },
+    },
+    {
+      errorPolicy: 'all',
+    },
+  )
+}
+
+/** SOURCE_END */
+
+const useSignInFormuseSignInFormMergeCartInterceptor: typeof useSignInFormOriginal = (...args) => {
+  return useSignInFormuseSignInFormMergeCart(useSignInFormOriginal, ...args)
+}
+
+/**
+ * Here you see the 'interceptor' that is applying all the configured plugins.
+ *
+ * This file is NOT meant to be modified directly and is auto-generated if the plugins or the
+ * original source changes.
+ *
+ * @see {@link file://./useSignInForm.ts} for original source file
+ * @see {useSignInFormuseSignInFormMergeCart} for source of applied plugin
+ */
+export const useSignInForm = useSignInFormuseSignInFormMergeCartInterceptor
