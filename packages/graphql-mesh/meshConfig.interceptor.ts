/* hash:1461810705 */
/* eslint-disable */
/* This file is automatically generated for @graphcommerce/graphql-mesh/meshConfig */

import { meshConfig as meshConfigmeshConfigFake } from '@graphcommerce/graphql-mesh/plugins/meshConfigFake'
import { meshConfig as meshConfigmeshConfigM2Rest } from '@graphcommerce/magento-graphql-rest/plugins/meshConfigM2Rest'
import { meshConfig as meshConfigmeshConfigAttrValue } from '@graphcommerce/magento-graphql/plugins/meshConfigAttrValue'
/** @see {@link file://./meshConfig.ts} for source of original */
/** SOURCE_START */
import type { GraphCommerceConfig } from '@graphcommerce/next-config'
import type { YamlConfig } from '@graphql-mesh/types'

export type MeshConfigFunction = typeof meshConfig
export function meshConfigOriginal(
  config: YamlConfig.Config,
  graphCommerceConfig: GraphCommerceConfig,
): YamlConfig.Config {
  return config
}

/** SOURCE_END */

const logged: Set<string> = new Set()
const logOnce = (log: string, ...additional: unknown[]) => {
  if (logged.has(log)) return
  logged.add(log)
  console.warn(log, ...additional)
}

const meshConfigmeshConfigFakeInterceptor: typeof meshConfigOriginal = (...args) => {
  return meshConfigmeshConfigFake(meshConfigOriginal, ...args)
}
const meshConfigmeshConfigAttrValueInterceptor: typeof meshConfigmeshConfigFakeInterceptor = (
  ...args
) => {
  return meshConfigmeshConfigAttrValue(meshConfigmeshConfigFakeInterceptor, ...args)
}
const meshConfigmeshConfigM2RestInterceptor: typeof meshConfigmeshConfigAttrValueInterceptor = (
  ...args
) => {
  return meshConfigmeshConfigM2Rest(meshConfigmeshConfigAttrValueInterceptor, ...args)
}

/**
 * Here you see the 'interceptor' that is applying all the configured plugins.
 *
 * This file is NOT meant to be modified directly and is auto-generated if the plugins or the
 * original source changes.
 *
 * @see {@link file://./meshConfig.ts} for original source file
 * @see {meshConfigmeshConfigFake} for source of applied plugin
 * @see {meshConfigmeshConfigAttrValue} for source of applied plugin
 * @see {meshConfigmeshConfigM2Rest} for source of applied plugin
 */
export const meshConfig = meshConfigmeshConfigM2RestInterceptor
