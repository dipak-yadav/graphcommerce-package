/* hash:928267280 */
/* eslint-disable */
/* This file is automatically generated for @graphcommerce/graphql/config */

import { graphqlConfig as graphqlConfighygraphGraphqlConfig } from '@graphcommerce/hygraph-ui/plugins/hygraphGraphqlConfig'
import { graphqlConfig as graphqlConfigmagentoGraphqlConfig } from '@graphcommerce/magento-graphql/plugins/magentoGraphqlConfig'
import { graphqlConfig as graphqlConfigmagentoStoreGraphqlConfig } from '@graphcommerce/magento-store/plugins/magentoStoreGraphqlConfig'
/** @see {@link file://./config.ts} for source of original */
/** SOURCE_START */
import type { GraphCommerceStorefrontConfig } from '@graphcommerce/next-config'
import type { ApolloLink, TypePolicies } from '@apollo/client'
import type { SetRequired } from 'type-fest'
import type { MigrateCache } from './components/GraphQLProvider/migrateCache'
import { RemovePrivateContextDirectivesLink } from './link/RemovePrivateContextDirectivesLink'

export interface PreviewData {}
export type PreviewConfig = {
  preview?: boolean
  previewData?: PreviewData & Record<string, unknown>
}
export type ApolloClientConfigInput = {
  storefront: GraphCommerceStorefrontConfig
  links?: ApolloLink[]
  policies?: TypePolicies[]
  migrations?: MigrateCache[]
} & PreviewConfig
export type ApolloClientConfig = SetRequired<
  ApolloClientConfigInput,
  'links' | 'policies' | 'migrations'
>
export function graphqlConfigOriginal(config: ApolloClientConfigInput): ApolloClientConfig {
  const { storefront, links = [], policies = [], migrations = [], ...rest } = config
  return {
    storefront,
    links: [...links, new RemovePrivateContextDirectivesLink()],
    policies,
    migrations,
    ...rest,
  }
}

/** SOURCE_END */

const logged: Set<string> = new Set()
const logOnce = (log: string, ...additional: unknown[]) => {
  if (logged.has(log)) return
  logged.add(log)
  console.warn(log, ...additional)
}

const graphqlConfigmagentoGraphqlConfigInterceptor: typeof graphqlConfigOriginal = (...args) => {
  return graphqlConfigmagentoGraphqlConfig(graphqlConfigOriginal, ...args)
}
const graphqlConfigmagentoStoreGraphqlConfigInterceptor: typeof graphqlConfigmagentoGraphqlConfigInterceptor =
  (...args) => {
    return graphqlConfigmagentoStoreGraphqlConfig(
      graphqlConfigmagentoGraphqlConfigInterceptor,
      ...args,
    )
  }
const graphqlConfighygraphGraphqlConfigInterceptor: typeof graphqlConfigmagentoStoreGraphqlConfigInterceptor =
  (...args) => {
    return graphqlConfighygraphGraphqlConfig(
      graphqlConfigmagentoStoreGraphqlConfigInterceptor,
      ...args,
    )
  }

/**
 * Here you see the 'interceptor' that is applying all the configured plugins.
 *
 * This file is NOT meant to be modified directly and is auto-generated if the plugins or the
 * original source changes.
 *
 * @see {@link file://./config.ts} for original source file
 * @see {graphqlConfigmagentoGraphqlConfig} for source of applied plugin
 * @see {graphqlConfigmagentoStoreGraphqlConfig} for source of applied plugin
 * @see {graphqlConfighygraphGraphqlConfig} for source of applied plugin
 */
export const graphqlConfig = graphqlConfighygraphGraphqlConfigInterceptor
