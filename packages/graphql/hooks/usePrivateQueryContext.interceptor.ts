/* hash:218001296 */
/* eslint-disable */
/* This file is automatically generated for @graphcommerce/graphql/hooks/usePrivateQueryContext */

/** @see {@link file://./usePrivateQueryContext.ts} for source of original */
/** SOURCE_START */
import type { PrivateContext } from '@graphcommerce/graphql-mesh'
import {
  getPrivateQueryContext as getPrivateQueryContextmagentoCustomerPrivateQueryContext,
  usePrivateQueryContext as usePrivateQueryContextmagentoCustomerPrivateQueryContext,
} from '@graphcommerce/magento-customer/plugins/magentoCustomerPrivateQueryContext'
import type { ApolloClient } from '@apollo/client'

export function getPrivateQueryContextOriginal(client: ApolloClient<any>): PrivateContext | null {
  return null
}
export const usePrivateQueryContextOriginal = (): PrivateContext | null => null

/** SOURCE_END */

const logged: Set<string> = new Set()
const logOnce = (log: string, ...additional: unknown[]) => {
  if (logged.has(log)) return
  logged.add(log)
  console.warn(log, ...additional)
}

const getPrivateQueryContextmagentoCustomerPrivateQueryContextInterceptor: typeof getPrivateQueryContextOriginal =
  (...args) => {
    return getPrivateQueryContextmagentoCustomerPrivateQueryContext(
      getPrivateQueryContextOriginal,
      ...args,
    )
  }

/**
 * Here you see the 'interceptor' that is applying all the configured plugins.
 *
 * This file is NOT meant to be modified directly and is auto-generated if the plugins or the
 * original source changes.
 *
 * @see {@link file://./usePrivateQueryContext.ts} for original source file
 * @see {getPrivateQueryContextmagentoCustomerPrivateQueryContext} for source of applied plugin
 */
export const getPrivateQueryContext =
  getPrivateQueryContextmagentoCustomerPrivateQueryContextInterceptor

const usePrivateQueryContextmagentoCustomerPrivateQueryContextInterceptor: typeof usePrivateQueryContextOriginal =
  (...args) => {
    return usePrivateQueryContextmagentoCustomerPrivateQueryContext(
      usePrivateQueryContextOriginal,
      ...args,
    )
  }

/**
 * Here you see the 'interceptor' that is applying all the configured plugins.
 *
 * This file is NOT meant to be modified directly and is auto-generated if the plugins or the
 * original source changes.
 *
 * @see {@link file://./usePrivateQueryContext.ts} for original source file
 * @see {usePrivateQueryContextmagentoCustomerPrivateQueryContext} for source of applied plugin
 */
export const usePrivateQueryContext =
  usePrivateQueryContextmagentoCustomerPrivateQueryContextInterceptor
